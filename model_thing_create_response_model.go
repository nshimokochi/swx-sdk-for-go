/*
 * Accounts & Users Service - Public API
 *
 * IN PROGRESS->This is the guide to use the different endpoints to manage the clusters.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ThingCreateResponseModel struct for ThingCreateResponseModel
type ThingCreateResponseModel struct {
	Name *string `json:"name,omitempty"`
	Version *float32 `json:"version,omitempty"`
}

// NewThingCreateResponseModel instantiates a new ThingCreateResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThingCreateResponseModel() *ThingCreateResponseModel {
	this := ThingCreateResponseModel{}
	return &this
}

// NewThingCreateResponseModelWithDefaults instantiates a new ThingCreateResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThingCreateResponseModelWithDefaults() *ThingCreateResponseModel {
	this := ThingCreateResponseModel{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ThingCreateResponseModel) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThingCreateResponseModel) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ThingCreateResponseModel) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ThingCreateResponseModel) SetName(v string) {
	o.Name = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ThingCreateResponseModel) GetVersion() float32 {
	if o == nil || o.Version == nil {
		var ret float32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThingCreateResponseModel) GetVersionOk() (*float32, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ThingCreateResponseModel) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given float32 and assigns it to the Version field.
func (o *ThingCreateResponseModel) SetVersion(v float32) {
	o.Version = &v
}

func (o ThingCreateResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableThingCreateResponseModel struct {
	value *ThingCreateResponseModel
	isSet bool
}

func (v NullableThingCreateResponseModel) Get() *ThingCreateResponseModel {
	return v.value
}

func (v *NullableThingCreateResponseModel) Set(val *ThingCreateResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableThingCreateResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableThingCreateResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThingCreateResponseModel(val *ThingCreateResponseModel) *NullableThingCreateResponseModel {
	return &NullableThingCreateResponseModel{value: val, isSet: true}
}

func (v NullableThingCreateResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThingCreateResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


