/*
 * Accounts & Users Service - Public API
 *
 * IN PROGRESS->This is the guide to use the different endpoints to manage the clusters.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// AppType OAuth2 grant type the client will use. Can be `client_credentials` or `authorization_code` (the latter also includes `refresh_token` grant).
type AppType string

// List of AppType
const (
	CLIENT_CREDENTIALS AppType = "client_credentials"
	AUTHORIZATION_CODE AppType = "authorization_code"
)

func (v *AppType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AppType(value)
	for _, existing := range []AppType{ "client_credentials", "authorization_code",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AppType", value)
}

// Ptr returns reference to AppType value
func (v AppType) Ptr() *AppType {
	return &v
}

type NullableAppType struct {
	value *AppType
	isSet bool
}

func (v NullableAppType) Get() *AppType {
	return v.value
}

func (v *NullableAppType) Set(val *AppType) {
	v.value = val
	v.isSet = true
}

func (v NullableAppType) IsSet() bool {
	return v.isSet
}

func (v *NullableAppType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppType(val *AppType) *NullableAppType {
	return &NullableAppType{value: val, isSet: true}
}

func (v NullableAppType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

