/*
 * Accounts & Users Service - Public API
 *
 * IN PROGRESS->This is the guide to use the different endpoints to manage the clusters.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ActionRunStatsInputProperties struct for ActionRunStatsInputProperties
type ActionRunStatsInputProperties struct {
	Interval *ActionRunStatsInputPropertiesInterval `json:"interval,omitempty"`
}

// NewActionRunStatsInputProperties instantiates a new ActionRunStatsInputProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionRunStatsInputProperties() *ActionRunStatsInputProperties {
	this := ActionRunStatsInputProperties{}
	return &this
}

// NewActionRunStatsInputPropertiesWithDefaults instantiates a new ActionRunStatsInputProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionRunStatsInputPropertiesWithDefaults() *ActionRunStatsInputProperties {
	this := ActionRunStatsInputProperties{}
	return &this
}

// GetInterval returns the Interval field value if set, zero value otherwise.
func (o *ActionRunStatsInputProperties) GetInterval() ActionRunStatsInputPropertiesInterval {
	if o == nil || o.Interval == nil {
		var ret ActionRunStatsInputPropertiesInterval
		return ret
	}
	return *o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionRunStatsInputProperties) GetIntervalOk() (*ActionRunStatsInputPropertiesInterval, bool) {
	if o == nil || o.Interval == nil {
		return nil, false
	}
	return o.Interval, true
}

// HasInterval returns a boolean if a field has been set.
func (o *ActionRunStatsInputProperties) HasInterval() bool {
	if o != nil && o.Interval != nil {
		return true
	}

	return false
}

// SetInterval gets a reference to the given ActionRunStatsInputPropertiesInterval and assigns it to the Interval field.
func (o *ActionRunStatsInputProperties) SetInterval(v ActionRunStatsInputPropertiesInterval) {
	o.Interval = &v
}

func (o ActionRunStatsInputProperties) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Interval != nil {
		toSerialize["interval"] = o.Interval
	}
	return json.Marshal(toSerialize)
}

type NullableActionRunStatsInputProperties struct {
	value *ActionRunStatsInputProperties
	isSet bool
}

func (v NullableActionRunStatsInputProperties) Get() *ActionRunStatsInputProperties {
	return v.value
}

func (v *NullableActionRunStatsInputProperties) Set(val *ActionRunStatsInputProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableActionRunStatsInputProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableActionRunStatsInputProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionRunStatsInputProperties(val *ActionRunStatsInputProperties) *NullableActionRunStatsInputProperties {
	return &NullableActionRunStatsInputProperties{value: val, isSet: true}
}

func (v NullableActionRunStatsInputProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionRunStatsInputProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


