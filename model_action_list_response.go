/*
 * Accounts & Users Service - Public API
 *
 * IN PROGRESS->This is the guide to use the different endpoints to manage the clusters.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ActionListResponse struct for ActionListResponse
type ActionListResponse struct {
	Data *[]map[string]interface{} `json:"data,omitempty"`
	Paging *ActionDelayListResponsePaging `json:"paging,omitempty"`
}

// NewActionListResponse instantiates a new ActionListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionListResponse() *ActionListResponse {
	this := ActionListResponse{}
	return &this
}

// NewActionListResponseWithDefaults instantiates a new ActionListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionListResponseWithDefaults() *ActionListResponse {
	this := ActionListResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ActionListResponse) GetData() []map[string]interface{} {
	if o == nil || o.Data == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionListResponse) GetDataOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ActionListResponse) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given []map[string]interface{} and assigns it to the Data field.
func (o *ActionListResponse) SetData(v []map[string]interface{}) {
	o.Data = &v
}

// GetPaging returns the Paging field value if set, zero value otherwise.
func (o *ActionListResponse) GetPaging() ActionDelayListResponsePaging {
	if o == nil || o.Paging == nil {
		var ret ActionDelayListResponsePaging
		return ret
	}
	return *o.Paging
}

// GetPagingOk returns a tuple with the Paging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionListResponse) GetPagingOk() (*ActionDelayListResponsePaging, bool) {
	if o == nil || o.Paging == nil {
		return nil, false
	}
	return o.Paging, true
}

// HasPaging returns a boolean if a field has been set.
func (o *ActionListResponse) HasPaging() bool {
	if o != nil && o.Paging != nil {
		return true
	}

	return false
}

// SetPaging gets a reference to the given ActionDelayListResponsePaging and assigns it to the Paging field.
func (o *ActionListResponse) SetPaging(v ActionDelayListResponsePaging) {
	o.Paging = &v
}

func (o ActionListResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if o.Paging != nil {
		toSerialize["paging"] = o.Paging
	}
	return json.Marshal(toSerialize)
}

type NullableActionListResponse struct {
	value *ActionListResponse
	isSet bool
}

func (v NullableActionListResponse) Get() *ActionListResponse {
	return v.value
}

func (v *NullableActionListResponse) Set(val *ActionListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableActionListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableActionListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionListResponse(val *ActionListResponse) *NullableActionListResponse {
	return &NullableActionListResponse{value: val, isSet: true}
}

func (v NullableActionListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


