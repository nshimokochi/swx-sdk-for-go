/*
 * Accounts & Users Service - Public API
 *
 * IN PROGRESS->This is the guide to use the different endpoints to manage the clusters.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// LabelRelationElement1 struct for LabelRelationElement1
type LabelRelationElement1 struct {
	CollectionName *string `json:"collection_name,omitempty"`
	EntityId *string `json:"entity_id,omitempty"`
	EntityName *string `json:"entity_name,omitempty"`
	EntityType *string `json:"entity_type,omitempty"`
	LabelId *string `json:"label_id,omitempty"`
	Space *string `json:"space,omitempty"`
}

// NewLabelRelationElement1 instantiates a new LabelRelationElement1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLabelRelationElement1() *LabelRelationElement1 {
	this := LabelRelationElement1{}
	return &this
}

// NewLabelRelationElement1WithDefaults instantiates a new LabelRelationElement1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLabelRelationElement1WithDefaults() *LabelRelationElement1 {
	this := LabelRelationElement1{}
	return &this
}

// GetCollectionName returns the CollectionName field value if set, zero value otherwise.
func (o *LabelRelationElement1) GetCollectionName() string {
	if o == nil || o.CollectionName == nil {
		var ret string
		return ret
	}
	return *o.CollectionName
}

// GetCollectionNameOk returns a tuple with the CollectionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LabelRelationElement1) GetCollectionNameOk() (*string, bool) {
	if o == nil || o.CollectionName == nil {
		return nil, false
	}
	return o.CollectionName, true
}

// HasCollectionName returns a boolean if a field has been set.
func (o *LabelRelationElement1) HasCollectionName() bool {
	if o != nil && o.CollectionName != nil {
		return true
	}

	return false
}

// SetCollectionName gets a reference to the given string and assigns it to the CollectionName field.
func (o *LabelRelationElement1) SetCollectionName(v string) {
	o.CollectionName = &v
}

// GetEntityId returns the EntityId field value if set, zero value otherwise.
func (o *LabelRelationElement1) GetEntityId() string {
	if o == nil || o.EntityId == nil {
		var ret string
		return ret
	}
	return *o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LabelRelationElement1) GetEntityIdOk() (*string, bool) {
	if o == nil || o.EntityId == nil {
		return nil, false
	}
	return o.EntityId, true
}

// HasEntityId returns a boolean if a field has been set.
func (o *LabelRelationElement1) HasEntityId() bool {
	if o != nil && o.EntityId != nil {
		return true
	}

	return false
}

// SetEntityId gets a reference to the given string and assigns it to the EntityId field.
func (o *LabelRelationElement1) SetEntityId(v string) {
	o.EntityId = &v
}

// GetEntityName returns the EntityName field value if set, zero value otherwise.
func (o *LabelRelationElement1) GetEntityName() string {
	if o == nil || o.EntityName == nil {
		var ret string
		return ret
	}
	return *o.EntityName
}

// GetEntityNameOk returns a tuple with the EntityName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LabelRelationElement1) GetEntityNameOk() (*string, bool) {
	if o == nil || o.EntityName == nil {
		return nil, false
	}
	return o.EntityName, true
}

// HasEntityName returns a boolean if a field has been set.
func (o *LabelRelationElement1) HasEntityName() bool {
	if o != nil && o.EntityName != nil {
		return true
	}

	return false
}

// SetEntityName gets a reference to the given string and assigns it to the EntityName field.
func (o *LabelRelationElement1) SetEntityName(v string) {
	o.EntityName = &v
}

// GetEntityType returns the EntityType field value if set, zero value otherwise.
func (o *LabelRelationElement1) GetEntityType() string {
	if o == nil || o.EntityType == nil {
		var ret string
		return ret
	}
	return *o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LabelRelationElement1) GetEntityTypeOk() (*string, bool) {
	if o == nil || o.EntityType == nil {
		return nil, false
	}
	return o.EntityType, true
}

// HasEntityType returns a boolean if a field has been set.
func (o *LabelRelationElement1) HasEntityType() bool {
	if o != nil && o.EntityType != nil {
		return true
	}

	return false
}

// SetEntityType gets a reference to the given string and assigns it to the EntityType field.
func (o *LabelRelationElement1) SetEntityType(v string) {
	o.EntityType = &v
}

// GetLabelId returns the LabelId field value if set, zero value otherwise.
func (o *LabelRelationElement1) GetLabelId() string {
	if o == nil || o.LabelId == nil {
		var ret string
		return ret
	}
	return *o.LabelId
}

// GetLabelIdOk returns a tuple with the LabelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LabelRelationElement1) GetLabelIdOk() (*string, bool) {
	if o == nil || o.LabelId == nil {
		return nil, false
	}
	return o.LabelId, true
}

// HasLabelId returns a boolean if a field has been set.
func (o *LabelRelationElement1) HasLabelId() bool {
	if o != nil && o.LabelId != nil {
		return true
	}

	return false
}

// SetLabelId gets a reference to the given string and assigns it to the LabelId field.
func (o *LabelRelationElement1) SetLabelId(v string) {
	o.LabelId = &v
}

// GetSpace returns the Space field value if set, zero value otherwise.
func (o *LabelRelationElement1) GetSpace() string {
	if o == nil || o.Space == nil {
		var ret string
		return ret
	}
	return *o.Space
}

// GetSpaceOk returns a tuple with the Space field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LabelRelationElement1) GetSpaceOk() (*string, bool) {
	if o == nil || o.Space == nil {
		return nil, false
	}
	return o.Space, true
}

// HasSpace returns a boolean if a field has been set.
func (o *LabelRelationElement1) HasSpace() bool {
	if o != nil && o.Space != nil {
		return true
	}

	return false
}

// SetSpace gets a reference to the given string and assigns it to the Space field.
func (o *LabelRelationElement1) SetSpace(v string) {
	o.Space = &v
}

func (o LabelRelationElement1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CollectionName != nil {
		toSerialize["collection_name"] = o.CollectionName
	}
	if o.EntityId != nil {
		toSerialize["entity_id"] = o.EntityId
	}
	if o.EntityName != nil {
		toSerialize["entity_name"] = o.EntityName
	}
	if o.EntityType != nil {
		toSerialize["entity_type"] = o.EntityType
	}
	if o.LabelId != nil {
		toSerialize["label_id"] = o.LabelId
	}
	if o.Space != nil {
		toSerialize["space"] = o.Space
	}
	return json.Marshal(toSerialize)
}

type NullableLabelRelationElement1 struct {
	value *LabelRelationElement1
	isSet bool
}

func (v NullableLabelRelationElement1) Get() *LabelRelationElement1 {
	return v.value
}

func (v *NullableLabelRelationElement1) Set(val *LabelRelationElement1) {
	v.value = val
	v.isSet = true
}

func (v NullableLabelRelationElement1) IsSet() bool {
	return v.isSet
}

func (v *NullableLabelRelationElement1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLabelRelationElement1(val *LabelRelationElement1) *NullableLabelRelationElement1 {
	return &NullableLabelRelationElement1{value: val, isSet: true}
}

func (v NullableLabelRelationElement1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLabelRelationElement1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


