/*
 * Accounts & Users Service - Public API
 *
 * IN PROGRESS->This is the guide to use the different endpoints to manage the clusters.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MQTTPUTBody struct for MQTTPUTBody
type MQTTPUTBody struct {
	Description *string `json:"description,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	ExpiredAt *int32 `json:"expired_at,omitempty"`
	Password *string `json:"password,omitempty"`
	Username *string `json:"username,omitempty"`
}

// NewMQTTPUTBody instantiates a new MQTTPUTBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMQTTPUTBody() *MQTTPUTBody {
	this := MQTTPUTBody{}
	return &this
}

// NewMQTTPUTBodyWithDefaults instantiates a new MQTTPUTBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMQTTPUTBodyWithDefaults() *MQTTPUTBody {
	this := MQTTPUTBody{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *MQTTPUTBody) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MQTTPUTBody) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MQTTPUTBody) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MQTTPUTBody) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *MQTTPUTBody) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MQTTPUTBody) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *MQTTPUTBody) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *MQTTPUTBody) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetExpiredAt returns the ExpiredAt field value if set, zero value otherwise.
func (o *MQTTPUTBody) GetExpiredAt() int32 {
	if o == nil || o.ExpiredAt == nil {
		var ret int32
		return ret
	}
	return *o.ExpiredAt
}

// GetExpiredAtOk returns a tuple with the ExpiredAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MQTTPUTBody) GetExpiredAtOk() (*int32, bool) {
	if o == nil || o.ExpiredAt == nil {
		return nil, false
	}
	return o.ExpiredAt, true
}

// HasExpiredAt returns a boolean if a field has been set.
func (o *MQTTPUTBody) HasExpiredAt() bool {
	if o != nil && o.ExpiredAt != nil {
		return true
	}

	return false
}

// SetExpiredAt gets a reference to the given int32 and assigns it to the ExpiredAt field.
func (o *MQTTPUTBody) SetExpiredAt(v int32) {
	o.ExpiredAt = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *MQTTPUTBody) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MQTTPUTBody) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *MQTTPUTBody) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *MQTTPUTBody) SetPassword(v string) {
	o.Password = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *MQTTPUTBody) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MQTTPUTBody) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *MQTTPUTBody) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *MQTTPUTBody) SetUsername(v string) {
	o.Username = &v
}

func (o MQTTPUTBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.ExpiredAt != nil {
		toSerialize["expired_at"] = o.ExpiredAt
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	return json.Marshal(toSerialize)
}

type NullableMQTTPUTBody struct {
	value *MQTTPUTBody
	isSet bool
}

func (v NullableMQTTPUTBody) Get() *MQTTPUTBody {
	return v.value
}

func (v *NullableMQTTPUTBody) Set(val *MQTTPUTBody) {
	v.value = val
	v.isSet = true
}

func (v NullableMQTTPUTBody) IsSet() bool {
	return v.isSet
}

func (v *NullableMQTTPUTBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMQTTPUTBody(val *MQTTPUTBody) *NullableMQTTPUTBody {
	return &NullableMQTTPUTBody{value: val, isSet: true}
}

func (v NullableMQTTPUTBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMQTTPUTBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


