/*
 * Accounts & Users Service - Public API
 *
 * IN PROGRESS->This is the guide to use the different endpoints to manage the clusters.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// EventResponse2HighCPU struct for EventResponse2HighCPU
type EventResponse2HighCPU struct {
	Data *float32 `json:"data,omitempty"`
	Href *string `json:"href,omitempty"`
	Timestamp *time.Time `json:"timestamp,omitempty"`
}

// NewEventResponse2HighCPU instantiates a new EventResponse2HighCPU object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventResponse2HighCPU() *EventResponse2HighCPU {
	this := EventResponse2HighCPU{}
	return &this
}

// NewEventResponse2HighCPUWithDefaults instantiates a new EventResponse2HighCPU object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventResponse2HighCPUWithDefaults() *EventResponse2HighCPU {
	this := EventResponse2HighCPU{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *EventResponse2HighCPU) GetData() float32 {
	if o == nil || o.Data == nil {
		var ret float32
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventResponse2HighCPU) GetDataOk() (*float32, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *EventResponse2HighCPU) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given float32 and assigns it to the Data field.
func (o *EventResponse2HighCPU) SetData(v float32) {
	o.Data = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *EventResponse2HighCPU) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventResponse2HighCPU) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *EventResponse2HighCPU) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *EventResponse2HighCPU) SetHref(v string) {
	o.Href = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *EventResponse2HighCPU) GetTimestamp() time.Time {
	if o == nil || o.Timestamp == nil {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventResponse2HighCPU) GetTimestampOk() (*time.Time, bool) {
	if o == nil || o.Timestamp == nil {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *EventResponse2HighCPU) HasTimestamp() bool {
	if o != nil && o.Timestamp != nil {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *EventResponse2HighCPU) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

func (o EventResponse2HighCPU) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	if o.Timestamp != nil {
		toSerialize["timestamp"] = o.Timestamp
	}
	return json.Marshal(toSerialize)
}

type NullableEventResponse2HighCPU struct {
	value *EventResponse2HighCPU
	isSet bool
}

func (v NullableEventResponse2HighCPU) Get() *EventResponse2HighCPU {
	return v.value
}

func (v *NullableEventResponse2HighCPU) Set(val *EventResponse2HighCPU) {
	v.value = val
	v.isSet = true
}

func (v NullableEventResponse2HighCPU) IsSet() bool {
	return v.isSet
}

func (v *NullableEventResponse2HighCPU) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventResponse2HighCPU(val *EventResponse2HighCPU) *NullableEventResponse2HighCPU {
	return &NullableEventResponse2HighCPU{value: val, isSet: true}
}

func (v NullableEventResponse2HighCPU) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventResponse2HighCPU) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


