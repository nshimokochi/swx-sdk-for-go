/*
 * Accounts & Users Service - Public API
 *
 * IN PROGRESS->This is the guide to use the different endpoints to manage the clusters.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// App struct for App
type App struct {
	// Configuration for `authorization_code` apps. Can be null for type `client_credentials`. This property is not available when listing Apps.
	AuthCodeConfig *AuthCodeConfig `json:"auth_code_config,omitempty"`
	ClientId string `json:"client_id"`
	Description string `json:"description"`
	Id string `json:"id"`
	Name string `json:"name"`
	Scopes string `json:"scopes"`
	// If `secret` attribute is set in a request, a new random client secret will be generated and returned in the response.
	Secret *string `json:"secret,omitempty"`
	Type AppType `json:"type"`
}

// NewApp instantiates a new App object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApp(clientId string, description string, id string, name string, scopes string, type_ AppType, ) *App {
	this := App{}
	this.ClientId = clientId
	this.Description = description
	this.Id = id
	this.Name = name
	this.Scopes = scopes
	this.Type = type_
	return &this
}

// NewAppWithDefaults instantiates a new App object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppWithDefaults() *App {
	this := App{}
	return &this
}

// GetAuthCodeConfig returns the AuthCodeConfig field value if set, zero value otherwise.
func (o *App) GetAuthCodeConfig() AuthCodeConfig {
	if o == nil || o.AuthCodeConfig == nil {
		var ret AuthCodeConfig
		return ret
	}
	return *o.AuthCodeConfig
}

// GetAuthCodeConfigOk returns a tuple with the AuthCodeConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetAuthCodeConfigOk() (*AuthCodeConfig, bool) {
	if o == nil || o.AuthCodeConfig == nil {
		return nil, false
	}
	return o.AuthCodeConfig, true
}

// HasAuthCodeConfig returns a boolean if a field has been set.
func (o *App) HasAuthCodeConfig() bool {
	if o != nil && o.AuthCodeConfig != nil {
		return true
	}

	return false
}

// SetAuthCodeConfig gets a reference to the given AuthCodeConfig and assigns it to the AuthCodeConfig field.
func (o *App) SetAuthCodeConfig(v AuthCodeConfig) {
	o.AuthCodeConfig = &v
}

// GetClientId returns the ClientId field value
func (o *App) GetClientId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *App) GetClientIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *App) SetClientId(v string) {
	o.ClientId = v
}

// GetDescription returns the Description field value
func (o *App) GetDescription() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *App) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *App) SetDescription(v string) {
	o.Description = v
}

// GetId returns the Id field value
func (o *App) GetId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *App) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *App) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *App) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *App) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *App) SetName(v string) {
	o.Name = v
}

// GetScopes returns the Scopes field value
func (o *App) GetScopes() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value
// and a boolean to check if the value has been set.
func (o *App) GetScopesOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Scopes, true
}

// SetScopes sets field value
func (o *App) SetScopes(v string) {
	o.Scopes = v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *App) GetSecret() string {
	if o == nil || o.Secret == nil {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetSecretOk() (*string, bool) {
	if o == nil || o.Secret == nil {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *App) HasSecret() bool {
	if o != nil && o.Secret != nil {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *App) SetSecret(v string) {
	o.Secret = &v
}

// GetType returns the Type field value
func (o *App) GetType() AppType {
	if o == nil  {
		var ret AppType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *App) GetTypeOk() (*AppType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *App) SetType(v AppType) {
	o.Type = v
}

func (o App) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AuthCodeConfig != nil {
		toSerialize["auth_code_config"] = o.AuthCodeConfig
	}
	if true {
		toSerialize["client_id"] = o.ClientId
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["scopes"] = o.Scopes
	}
	if o.Secret != nil {
		toSerialize["secret"] = o.Secret
	}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableApp struct {
	value *App
	isSet bool
}

func (v NullableApp) Get() *App {
	return v.value
}

func (v *NullableApp) Set(val *App) {
	v.value = val
	v.isSet = true
}

func (v NullableApp) IsSet() bool {
	return v.isSet
}

func (v *NullableApp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApp(val *App) *NullableApp {
	return &NullableApp{value: val, isSet: true}
}

func (v NullableApp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


