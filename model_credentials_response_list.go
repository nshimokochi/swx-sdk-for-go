/*
 * Accounts & Users Service - Public API
 *
 * IN PROGRESS->This is the guide to use the different endpoints to manage the clusters.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CredentialsResponseList struct for CredentialsResponseList
type CredentialsResponseList struct {
	Collection *[]CredentialsStudio `json:"collection,omitempty"`
}

// NewCredentialsResponseList instantiates a new CredentialsResponseList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCredentialsResponseList() *CredentialsResponseList {
	this := CredentialsResponseList{}
	return &this
}

// NewCredentialsResponseListWithDefaults instantiates a new CredentialsResponseList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCredentialsResponseListWithDefaults() *CredentialsResponseList {
	this := CredentialsResponseList{}
	return &this
}

// GetCollection returns the Collection field value if set, zero value otherwise.
func (o *CredentialsResponseList) GetCollection() []CredentialsStudio {
	if o == nil || o.Collection == nil {
		var ret []CredentialsStudio
		return ret
	}
	return *o.Collection
}

// GetCollectionOk returns a tuple with the Collection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsResponseList) GetCollectionOk() (*[]CredentialsStudio, bool) {
	if o == nil || o.Collection == nil {
		return nil, false
	}
	return o.Collection, true
}

// HasCollection returns a boolean if a field has been set.
func (o *CredentialsResponseList) HasCollection() bool {
	if o != nil && o.Collection != nil {
		return true
	}

	return false
}

// SetCollection gets a reference to the given []CredentialsStudio and assigns it to the Collection field.
func (o *CredentialsResponseList) SetCollection(v []CredentialsStudio) {
	o.Collection = &v
}

func (o CredentialsResponseList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Collection != nil {
		toSerialize["collection"] = o.Collection
	}
	return json.Marshal(toSerialize)
}

type NullableCredentialsResponseList struct {
	value *CredentialsResponseList
	isSet bool
}

func (v NullableCredentialsResponseList) Get() *CredentialsResponseList {
	return v.value
}

func (v *NullableCredentialsResponseList) Set(val *CredentialsResponseList) {
	v.value = val
	v.isSet = true
}

func (v NullableCredentialsResponseList) IsSet() bool {
	return v.isSet
}

func (v *NullableCredentialsResponseList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCredentialsResponseList(val *CredentialsResponseList) *NullableCredentialsResponseList {
	return &NullableCredentialsResponseList{value: val, isSet: true}
}

func (v NullableCredentialsResponseList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCredentialsResponseList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


