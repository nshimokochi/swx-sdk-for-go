/*
 * Accounts & Users Service - Public API
 *
 * IN PROGRESS->This is the guide to use the different endpoints to manage the clusters.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// CredentialsThing struct for CredentialsThing
type CredentialsThing struct {
	CreatedAt *time.Time `json:"created_at,omitempty"`
	Description *string `json:"description,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	ExpiredAt *int32 `json:"expired_at,omitempty"`
	Id *string `json:"id,omitempty"`
	Topics *[]MQTTAccountProperties `json:"topics,omitempty"`
	Type *string `json:"type,omitempty"`
	Username *string `json:"username,omitempty"`
}

// NewCredentialsThing instantiates a new CredentialsThing object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCredentialsThing() *CredentialsThing {
	this := CredentialsThing{}
	return &this
}

// NewCredentialsThingWithDefaults instantiates a new CredentialsThing object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCredentialsThingWithDefaults() *CredentialsThing {
	this := CredentialsThing{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CredentialsThing) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsThing) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CredentialsThing) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *CredentialsThing) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CredentialsThing) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsThing) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CredentialsThing) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CredentialsThing) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *CredentialsThing) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsThing) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *CredentialsThing) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *CredentialsThing) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetExpiredAt returns the ExpiredAt field value if set, zero value otherwise.
func (o *CredentialsThing) GetExpiredAt() int32 {
	if o == nil || o.ExpiredAt == nil {
		var ret int32
		return ret
	}
	return *o.ExpiredAt
}

// GetExpiredAtOk returns a tuple with the ExpiredAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsThing) GetExpiredAtOk() (*int32, bool) {
	if o == nil || o.ExpiredAt == nil {
		return nil, false
	}
	return o.ExpiredAt, true
}

// HasExpiredAt returns a boolean if a field has been set.
func (o *CredentialsThing) HasExpiredAt() bool {
	if o != nil && o.ExpiredAt != nil {
		return true
	}

	return false
}

// SetExpiredAt gets a reference to the given int32 and assigns it to the ExpiredAt field.
func (o *CredentialsThing) SetExpiredAt(v int32) {
	o.ExpiredAt = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CredentialsThing) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsThing) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CredentialsThing) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CredentialsThing) SetId(v string) {
	o.Id = &v
}

// GetTopics returns the Topics field value if set, zero value otherwise.
func (o *CredentialsThing) GetTopics() []MQTTAccountProperties {
	if o == nil || o.Topics == nil {
		var ret []MQTTAccountProperties
		return ret
	}
	return *o.Topics
}

// GetTopicsOk returns a tuple with the Topics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsThing) GetTopicsOk() (*[]MQTTAccountProperties, bool) {
	if o == nil || o.Topics == nil {
		return nil, false
	}
	return o.Topics, true
}

// HasTopics returns a boolean if a field has been set.
func (o *CredentialsThing) HasTopics() bool {
	if o != nil && o.Topics != nil {
		return true
	}

	return false
}

// SetTopics gets a reference to the given []MQTTAccountProperties and assigns it to the Topics field.
func (o *CredentialsThing) SetTopics(v []MQTTAccountProperties) {
	o.Topics = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CredentialsThing) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsThing) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CredentialsThing) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CredentialsThing) SetType(v string) {
	o.Type = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *CredentialsThing) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsThing) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *CredentialsThing) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *CredentialsThing) SetUsername(v string) {
	o.Username = &v
}

func (o CredentialsThing) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.ExpiredAt != nil {
		toSerialize["expired_at"] = o.ExpiredAt
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Topics != nil {
		toSerialize["topics"] = o.Topics
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	return json.Marshal(toSerialize)
}

type NullableCredentialsThing struct {
	value *CredentialsThing
	isSet bool
}

func (v NullableCredentialsThing) Get() *CredentialsThing {
	return v.value
}

func (v *NullableCredentialsThing) Set(val *CredentialsThing) {
	v.value = val
	v.isSet = true
}

func (v NullableCredentialsThing) IsSet() bool {
	return v.isSet
}

func (v *NullableCredentialsThing) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCredentialsThing(val *CredentialsThing) *NullableCredentialsThing {
	return &NullableCredentialsThing{value: val, isSet: true}
}

func (v NullableCredentialsThing) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCredentialsThing) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


