/*
 * Accounts & Users Service - Public API
 *
 * IN PROGRESS->This is the guide to use the different endpoints to manage the clusters.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UpdateClusterResponseProperties struct for UpdateClusterResponseProperties
type UpdateClusterResponseProperties struct {
	BuildConfiguration *PropertyBuildConfiguration `json:"build-configuration,omitempty"`
	MasterNode *PropertyMasterNode `json:"master_node,omitempty"`
	Status *PropertyStatus `json:"status,omitempty"`
}

// NewUpdateClusterResponseProperties instantiates a new UpdateClusterResponseProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateClusterResponseProperties() *UpdateClusterResponseProperties {
	this := UpdateClusterResponseProperties{}
	return &this
}

// NewUpdateClusterResponsePropertiesWithDefaults instantiates a new UpdateClusterResponseProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateClusterResponsePropertiesWithDefaults() *UpdateClusterResponseProperties {
	this := UpdateClusterResponseProperties{}
	return &this
}

// GetBuildConfiguration returns the BuildConfiguration field value if set, zero value otherwise.
func (o *UpdateClusterResponseProperties) GetBuildConfiguration() PropertyBuildConfiguration {
	if o == nil || o.BuildConfiguration == nil {
		var ret PropertyBuildConfiguration
		return ret
	}
	return *o.BuildConfiguration
}

// GetBuildConfigurationOk returns a tuple with the BuildConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateClusterResponseProperties) GetBuildConfigurationOk() (*PropertyBuildConfiguration, bool) {
	if o == nil || o.BuildConfiguration == nil {
		return nil, false
	}
	return o.BuildConfiguration, true
}

// HasBuildConfiguration returns a boolean if a field has been set.
func (o *UpdateClusterResponseProperties) HasBuildConfiguration() bool {
	if o != nil && o.BuildConfiguration != nil {
		return true
	}

	return false
}

// SetBuildConfiguration gets a reference to the given PropertyBuildConfiguration and assigns it to the BuildConfiguration field.
func (o *UpdateClusterResponseProperties) SetBuildConfiguration(v PropertyBuildConfiguration) {
	o.BuildConfiguration = &v
}

// GetMasterNode returns the MasterNode field value if set, zero value otherwise.
func (o *UpdateClusterResponseProperties) GetMasterNode() PropertyMasterNode {
	if o == nil || o.MasterNode == nil {
		var ret PropertyMasterNode
		return ret
	}
	return *o.MasterNode
}

// GetMasterNodeOk returns a tuple with the MasterNode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateClusterResponseProperties) GetMasterNodeOk() (*PropertyMasterNode, bool) {
	if o == nil || o.MasterNode == nil {
		return nil, false
	}
	return o.MasterNode, true
}

// HasMasterNode returns a boolean if a field has been set.
func (o *UpdateClusterResponseProperties) HasMasterNode() bool {
	if o != nil && o.MasterNode != nil {
		return true
	}

	return false
}

// SetMasterNode gets a reference to the given PropertyMasterNode and assigns it to the MasterNode field.
func (o *UpdateClusterResponseProperties) SetMasterNode(v PropertyMasterNode) {
	o.MasterNode = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *UpdateClusterResponseProperties) GetStatus() PropertyStatus {
	if o == nil || o.Status == nil {
		var ret PropertyStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateClusterResponseProperties) GetStatusOk() (*PropertyStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *UpdateClusterResponseProperties) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given PropertyStatus and assigns it to the Status field.
func (o *UpdateClusterResponseProperties) SetStatus(v PropertyStatus) {
	o.Status = &v
}

func (o UpdateClusterResponseProperties) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BuildConfiguration != nil {
		toSerialize["build-configuration"] = o.BuildConfiguration
	}
	if o.MasterNode != nil {
		toSerialize["master_node"] = o.MasterNode
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateClusterResponseProperties struct {
	value *UpdateClusterResponseProperties
	isSet bool
}

func (v NullableUpdateClusterResponseProperties) Get() *UpdateClusterResponseProperties {
	return v.value
}

func (v *NullableUpdateClusterResponseProperties) Set(val *UpdateClusterResponseProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateClusterResponseProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateClusterResponseProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateClusterResponseProperties(val *UpdateClusterResponseProperties) *NullableUpdateClusterResponseProperties {
	return &NullableUpdateClusterResponseProperties{value: val, isSet: true}
}

func (v NullableUpdateClusterResponseProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateClusterResponseProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


