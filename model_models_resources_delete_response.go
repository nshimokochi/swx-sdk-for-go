/*
 * Accounts & Users Service - Public API
 *
 * IN PROGRESS->This is the guide to use the different endpoints to manage the clusters.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ModelsResourcesDeleteResponse struct for ModelsResourcesDeleteResponse
type ModelsResourcesDeleteResponse struct {
	ErrorEcpBackend *DeleteClusterResponseErrorClusterBackend `json:"error_ecp_backend,omitempty"`
}

// NewModelsResourcesDeleteResponse instantiates a new ModelsResourcesDeleteResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsResourcesDeleteResponse() *ModelsResourcesDeleteResponse {
	this := ModelsResourcesDeleteResponse{}
	return &this
}

// NewModelsResourcesDeleteResponseWithDefaults instantiates a new ModelsResourcesDeleteResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsResourcesDeleteResponseWithDefaults() *ModelsResourcesDeleteResponse {
	this := ModelsResourcesDeleteResponse{}
	return &this
}

// GetErrorEcpBackend returns the ErrorEcpBackend field value if set, zero value otherwise.
func (o *ModelsResourcesDeleteResponse) GetErrorEcpBackend() DeleteClusterResponseErrorClusterBackend {
	if o == nil || o.ErrorEcpBackend == nil {
		var ret DeleteClusterResponseErrorClusterBackend
		return ret
	}
	return *o.ErrorEcpBackend
}

// GetErrorEcpBackendOk returns a tuple with the ErrorEcpBackend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsResourcesDeleteResponse) GetErrorEcpBackendOk() (*DeleteClusterResponseErrorClusterBackend, bool) {
	if o == nil || o.ErrorEcpBackend == nil {
		return nil, false
	}
	return o.ErrorEcpBackend, true
}

// HasErrorEcpBackend returns a boolean if a field has been set.
func (o *ModelsResourcesDeleteResponse) HasErrorEcpBackend() bool {
	if o != nil && o.ErrorEcpBackend != nil {
		return true
	}

	return false
}

// SetErrorEcpBackend gets a reference to the given DeleteClusterResponseErrorClusterBackend and assigns it to the ErrorEcpBackend field.
func (o *ModelsResourcesDeleteResponse) SetErrorEcpBackend(v DeleteClusterResponseErrorClusterBackend) {
	o.ErrorEcpBackend = &v
}

func (o ModelsResourcesDeleteResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ErrorEcpBackend != nil {
		toSerialize["error_ecp_backend"] = o.ErrorEcpBackend
	}
	return json.Marshal(toSerialize)
}

type NullableModelsResourcesDeleteResponse struct {
	value *ModelsResourcesDeleteResponse
	isSet bool
}

func (v NullableModelsResourcesDeleteResponse) Get() *ModelsResourcesDeleteResponse {
	return v.value
}

func (v *NullableModelsResourcesDeleteResponse) Set(val *ModelsResourcesDeleteResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsResourcesDeleteResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsResourcesDeleteResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsResourcesDeleteResponse(val *ModelsResourcesDeleteResponse) *NullableModelsResourcesDeleteResponse {
	return &NullableModelsResourcesDeleteResponse{value: val, isSet: true}
}

func (v NullableModelsResourcesDeleteResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsResourcesDeleteResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


