/*
 * Accounts & Users Service - Public API
 *
 * IN PROGRESS->This is the guide to use the different endpoints to manage the clusters.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CollectionListResponse struct for CollectionListResponse
type CollectionListResponse struct {
	Data *[]CollectionResponse `json:"data,omitempty"`
	Paging *ActionDelayListResponsePaging `json:"paging,omitempty"`
}

// NewCollectionListResponse instantiates a new CollectionListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCollectionListResponse() *CollectionListResponse {
	this := CollectionListResponse{}
	return &this
}

// NewCollectionListResponseWithDefaults instantiates a new CollectionListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCollectionListResponseWithDefaults() *CollectionListResponse {
	this := CollectionListResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *CollectionListResponse) GetData() []CollectionResponse {
	if o == nil || o.Data == nil {
		var ret []CollectionResponse
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionListResponse) GetDataOk() (*[]CollectionResponse, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *CollectionListResponse) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given []CollectionResponse and assigns it to the Data field.
func (o *CollectionListResponse) SetData(v []CollectionResponse) {
	o.Data = &v
}

// GetPaging returns the Paging field value if set, zero value otherwise.
func (o *CollectionListResponse) GetPaging() ActionDelayListResponsePaging {
	if o == nil || o.Paging == nil {
		var ret ActionDelayListResponsePaging
		return ret
	}
	return *o.Paging
}

// GetPagingOk returns a tuple with the Paging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionListResponse) GetPagingOk() (*ActionDelayListResponsePaging, bool) {
	if o == nil || o.Paging == nil {
		return nil, false
	}
	return o.Paging, true
}

// HasPaging returns a boolean if a field has been set.
func (o *CollectionListResponse) HasPaging() bool {
	if o != nil && o.Paging != nil {
		return true
	}

	return false
}

// SetPaging gets a reference to the given ActionDelayListResponsePaging and assigns it to the Paging field.
func (o *CollectionListResponse) SetPaging(v ActionDelayListResponsePaging) {
	o.Paging = &v
}

func (o CollectionListResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if o.Paging != nil {
		toSerialize["paging"] = o.Paging
	}
	return json.Marshal(toSerialize)
}

type NullableCollectionListResponse struct {
	value *CollectionListResponse
	isSet bool
}

func (v NullableCollectionListResponse) Get() *CollectionListResponse {
	return v.value
}

func (v *NullableCollectionListResponse) Set(val *CollectionListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCollectionListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCollectionListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCollectionListResponse(val *CollectionListResponse) *NullableCollectionListResponse {
	return &NullableCollectionListResponse{value: val, isSet: true}
}

func (v NullableCollectionListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCollectionListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


