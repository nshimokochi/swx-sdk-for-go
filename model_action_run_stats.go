/*
 * Accounts & Users Service - Public API
 *
 * IN PROGRESS->This is the guide to use the different endpoints to manage the clusters.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ActionRunStats struct for ActionRunStats
type ActionRunStats struct {
	Description *string `json:"description,omitempty"`
	Input *ActionRunStatsInput `json:"input,omitempty"`
	Links *[]ActionRunStatsLinks `json:"links,omitempty"`
	Title *string `json:"title,omitempty"`
}

// NewActionRunStats instantiates a new ActionRunStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionRunStats() *ActionRunStats {
	this := ActionRunStats{}
	return &this
}

// NewActionRunStatsWithDefaults instantiates a new ActionRunStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionRunStatsWithDefaults() *ActionRunStats {
	this := ActionRunStats{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ActionRunStats) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionRunStats) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ActionRunStats) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ActionRunStats) SetDescription(v string) {
	o.Description = &v
}

// GetInput returns the Input field value if set, zero value otherwise.
func (o *ActionRunStats) GetInput() ActionRunStatsInput {
	if o == nil || o.Input == nil {
		var ret ActionRunStatsInput
		return ret
	}
	return *o.Input
}

// GetInputOk returns a tuple with the Input field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionRunStats) GetInputOk() (*ActionRunStatsInput, bool) {
	if o == nil || o.Input == nil {
		return nil, false
	}
	return o.Input, true
}

// HasInput returns a boolean if a field has been set.
func (o *ActionRunStats) HasInput() bool {
	if o != nil && o.Input != nil {
		return true
	}

	return false
}

// SetInput gets a reference to the given ActionRunStatsInput and assigns it to the Input field.
func (o *ActionRunStats) SetInput(v ActionRunStatsInput) {
	o.Input = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ActionRunStats) GetLinks() []ActionRunStatsLinks {
	if o == nil || o.Links == nil {
		var ret []ActionRunStatsLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionRunStats) GetLinksOk() (*[]ActionRunStatsLinks, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ActionRunStats) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []ActionRunStatsLinks and assigns it to the Links field.
func (o *ActionRunStats) SetLinks(v []ActionRunStatsLinks) {
	o.Links = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *ActionRunStats) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionRunStats) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *ActionRunStats) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *ActionRunStats) SetTitle(v string) {
	o.Title = &v
}

func (o ActionRunStats) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Input != nil {
		toSerialize["input"] = o.Input
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	return json.Marshal(toSerialize)
}

type NullableActionRunStats struct {
	value *ActionRunStats
	isSet bool
}

func (v NullableActionRunStats) Get() *ActionRunStats {
	return v.value
}

func (v *NullableActionRunStats) Set(val *ActionRunStats) {
	v.value = val
	v.isSet = true
}

func (v NullableActionRunStats) IsSet() bool {
	return v.isSet
}

func (v *NullableActionRunStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionRunStats(val *ActionRunStats) *NullableActionRunStats {
	return &NullableActionRunStats{value: val, isSet: true}
}

func (v NullableActionRunStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionRunStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


