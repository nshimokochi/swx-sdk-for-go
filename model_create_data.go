/*
 * Accounts & Users Service - Public API
 *
 * IN PROGRESS->This is the guide to use the different endpoints to manage the clusters.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CreateData struct for CreateData
type CreateData struct {
	Hello *string `json:"hello,omitempty"`
}

// NewCreateData instantiates a new CreateData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateData() *CreateData {
	this := CreateData{}
	return &this
}

// NewCreateDataWithDefaults instantiates a new CreateData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDataWithDefaults() *CreateData {
	this := CreateData{}
	return &this
}

// GetHello returns the Hello field value if set, zero value otherwise.
func (o *CreateData) GetHello() string {
	if o == nil || o.Hello == nil {
		var ret string
		return ret
	}
	return *o.Hello
}

// GetHelloOk returns a tuple with the Hello field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateData) GetHelloOk() (*string, bool) {
	if o == nil || o.Hello == nil {
		return nil, false
	}
	return o.Hello, true
}

// HasHello returns a boolean if a field has been set.
func (o *CreateData) HasHello() bool {
	if o != nil && o.Hello != nil {
		return true
	}

	return false
}

// SetHello gets a reference to the given string and assigns it to the Hello field.
func (o *CreateData) SetHello(v string) {
	o.Hello = &v
}

func (o CreateData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Hello != nil {
		toSerialize["hello"] = o.Hello
	}
	return json.Marshal(toSerialize)
}

type NullableCreateData struct {
	value *CreateData
	isSet bool
}

func (v NullableCreateData) Get() *CreateData {
	return v.value
}

func (v *NullableCreateData) Set(val *CreateData) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateData) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateData(val *CreateData) *NullableCreateData {
	return &NullableCreateData{value: val, isSet: true}
}

func (v NullableCreateData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


