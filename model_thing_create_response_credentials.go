/*
 * Accounts & Users Service - Public API
 *
 * IN PROGRESS->This is the guide to use the different endpoints to manage the clusters.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ThingCreateResponseCredentials struct for ThingCreateResponseCredentials
type ThingCreateResponseCredentials struct {
	Http *ThingCreateResponseCredentialsHttp `json:"http,omitempty"`
	Mqtt *ThingCreateResponseCredentialsMqtt `json:"mqtt,omitempty"`
}

// NewThingCreateResponseCredentials instantiates a new ThingCreateResponseCredentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThingCreateResponseCredentials() *ThingCreateResponseCredentials {
	this := ThingCreateResponseCredentials{}
	return &this
}

// NewThingCreateResponseCredentialsWithDefaults instantiates a new ThingCreateResponseCredentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThingCreateResponseCredentialsWithDefaults() *ThingCreateResponseCredentials {
	this := ThingCreateResponseCredentials{}
	return &this
}

// GetHttp returns the Http field value if set, zero value otherwise.
func (o *ThingCreateResponseCredentials) GetHttp() ThingCreateResponseCredentialsHttp {
	if o == nil || o.Http == nil {
		var ret ThingCreateResponseCredentialsHttp
		return ret
	}
	return *o.Http
}

// GetHttpOk returns a tuple with the Http field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThingCreateResponseCredentials) GetHttpOk() (*ThingCreateResponseCredentialsHttp, bool) {
	if o == nil || o.Http == nil {
		return nil, false
	}
	return o.Http, true
}

// HasHttp returns a boolean if a field has been set.
func (o *ThingCreateResponseCredentials) HasHttp() bool {
	if o != nil && o.Http != nil {
		return true
	}

	return false
}

// SetHttp gets a reference to the given ThingCreateResponseCredentialsHttp and assigns it to the Http field.
func (o *ThingCreateResponseCredentials) SetHttp(v ThingCreateResponseCredentialsHttp) {
	o.Http = &v
}

// GetMqtt returns the Mqtt field value if set, zero value otherwise.
func (o *ThingCreateResponseCredentials) GetMqtt() ThingCreateResponseCredentialsMqtt {
	if o == nil || o.Mqtt == nil {
		var ret ThingCreateResponseCredentialsMqtt
		return ret
	}
	return *o.Mqtt
}

// GetMqttOk returns a tuple with the Mqtt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThingCreateResponseCredentials) GetMqttOk() (*ThingCreateResponseCredentialsMqtt, bool) {
	if o == nil || o.Mqtt == nil {
		return nil, false
	}
	return o.Mqtt, true
}

// HasMqtt returns a boolean if a field has been set.
func (o *ThingCreateResponseCredentials) HasMqtt() bool {
	if o != nil && o.Mqtt != nil {
		return true
	}

	return false
}

// SetMqtt gets a reference to the given ThingCreateResponseCredentialsMqtt and assigns it to the Mqtt field.
func (o *ThingCreateResponseCredentials) SetMqtt(v ThingCreateResponseCredentialsMqtt) {
	o.Mqtt = &v
}

func (o ThingCreateResponseCredentials) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Http != nil {
		toSerialize["http"] = o.Http
	}
	if o.Mqtt != nil {
		toSerialize["mqtt"] = o.Mqtt
	}
	return json.Marshal(toSerialize)
}

type NullableThingCreateResponseCredentials struct {
	value *ThingCreateResponseCredentials
	isSet bool
}

func (v NullableThingCreateResponseCredentials) Get() *ThingCreateResponseCredentials {
	return v.value
}

func (v *NullableThingCreateResponseCredentials) Set(val *ThingCreateResponseCredentials) {
	v.value = val
	v.isSet = true
}

func (v NullableThingCreateResponseCredentials) IsSet() bool {
	return v.isSet
}

func (v *NullableThingCreateResponseCredentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThingCreateResponseCredentials(val *ThingCreateResponseCredentials) *NullableThingCreateResponseCredentials {
	return &NullableThingCreateResponseCredentials{value: val, isSet: true}
}

func (v NullableThingCreateResponseCredentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThingCreateResponseCredentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


