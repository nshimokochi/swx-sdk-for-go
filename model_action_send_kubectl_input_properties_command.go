/*
 * Accounts & Users Service - Public API
 *
 * IN PROGRESS->This is the guide to use the different endpoints to manage the clusters.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ActionSendKubectlInputPropertiesCommand struct for ActionSendKubectlInputPropertiesCommand
type ActionSendKubectlInputPropertiesCommand struct {
	Type *string `json:"type,omitempty"`
}

// NewActionSendKubectlInputPropertiesCommand instantiates a new ActionSendKubectlInputPropertiesCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionSendKubectlInputPropertiesCommand() *ActionSendKubectlInputPropertiesCommand {
	this := ActionSendKubectlInputPropertiesCommand{}
	return &this
}

// NewActionSendKubectlInputPropertiesCommandWithDefaults instantiates a new ActionSendKubectlInputPropertiesCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionSendKubectlInputPropertiesCommandWithDefaults() *ActionSendKubectlInputPropertiesCommand {
	this := ActionSendKubectlInputPropertiesCommand{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ActionSendKubectlInputPropertiesCommand) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionSendKubectlInputPropertiesCommand) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ActionSendKubectlInputPropertiesCommand) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ActionSendKubectlInputPropertiesCommand) SetType(v string) {
	o.Type = &v
}

func (o ActionSendKubectlInputPropertiesCommand) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableActionSendKubectlInputPropertiesCommand struct {
	value *ActionSendKubectlInputPropertiesCommand
	isSet bool
}

func (v NullableActionSendKubectlInputPropertiesCommand) Get() *ActionSendKubectlInputPropertiesCommand {
	return v.value
}

func (v *NullableActionSendKubectlInputPropertiesCommand) Set(val *ActionSendKubectlInputPropertiesCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableActionSendKubectlInputPropertiesCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableActionSendKubectlInputPropertiesCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionSendKubectlInputPropertiesCommand(val *ActionSendKubectlInputPropertiesCommand) *NullableActionSendKubectlInputPropertiesCommand {
	return &NullableActionSendKubectlInputPropertiesCommand{value: val, isSet: true}
}

func (v NullableActionSendKubectlInputPropertiesCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionSendKubectlInputPropertiesCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


