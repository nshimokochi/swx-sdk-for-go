/*
 * Accounts & Users Service - Public API
 *
 * IN PROGRESS->This is the guide to use the different endpoints to manage the clusters.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// ActionResponseElement2Delay struct for ActionResponseElement2Delay
type ActionResponseElement2Delay struct {
	Href *string `json:"href,omitempty"`
	Input *ActionResponseElement2DelayInput `json:"input,omitempty"`
	Status *string `json:"status,omitempty"`
	TimeRequested *time.Time `json:"timeRequested,omitempty"`
}

// NewActionResponseElement2Delay instantiates a new ActionResponseElement2Delay object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionResponseElement2Delay() *ActionResponseElement2Delay {
	this := ActionResponseElement2Delay{}
	return &this
}

// NewActionResponseElement2DelayWithDefaults instantiates a new ActionResponseElement2Delay object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionResponseElement2DelayWithDefaults() *ActionResponseElement2Delay {
	this := ActionResponseElement2Delay{}
	return &this
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *ActionResponseElement2Delay) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionResponseElement2Delay) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *ActionResponseElement2Delay) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *ActionResponseElement2Delay) SetHref(v string) {
	o.Href = &v
}

// GetInput returns the Input field value if set, zero value otherwise.
func (o *ActionResponseElement2Delay) GetInput() ActionResponseElement2DelayInput {
	if o == nil || o.Input == nil {
		var ret ActionResponseElement2DelayInput
		return ret
	}
	return *o.Input
}

// GetInputOk returns a tuple with the Input field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionResponseElement2Delay) GetInputOk() (*ActionResponseElement2DelayInput, bool) {
	if o == nil || o.Input == nil {
		return nil, false
	}
	return o.Input, true
}

// HasInput returns a boolean if a field has been set.
func (o *ActionResponseElement2Delay) HasInput() bool {
	if o != nil && o.Input != nil {
		return true
	}

	return false
}

// SetInput gets a reference to the given ActionResponseElement2DelayInput and assigns it to the Input field.
func (o *ActionResponseElement2Delay) SetInput(v ActionResponseElement2DelayInput) {
	o.Input = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ActionResponseElement2Delay) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionResponseElement2Delay) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ActionResponseElement2Delay) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ActionResponseElement2Delay) SetStatus(v string) {
	o.Status = &v
}

// GetTimeRequested returns the TimeRequested field value if set, zero value otherwise.
func (o *ActionResponseElement2Delay) GetTimeRequested() time.Time {
	if o == nil || o.TimeRequested == nil {
		var ret time.Time
		return ret
	}
	return *o.TimeRequested
}

// GetTimeRequestedOk returns a tuple with the TimeRequested field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionResponseElement2Delay) GetTimeRequestedOk() (*time.Time, bool) {
	if o == nil || o.TimeRequested == nil {
		return nil, false
	}
	return o.TimeRequested, true
}

// HasTimeRequested returns a boolean if a field has been set.
func (o *ActionResponseElement2Delay) HasTimeRequested() bool {
	if o != nil && o.TimeRequested != nil {
		return true
	}

	return false
}

// SetTimeRequested gets a reference to the given time.Time and assigns it to the TimeRequested field.
func (o *ActionResponseElement2Delay) SetTimeRequested(v time.Time) {
	o.TimeRequested = &v
}

func (o ActionResponseElement2Delay) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	if o.Input != nil {
		toSerialize["input"] = o.Input
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.TimeRequested != nil {
		toSerialize["timeRequested"] = o.TimeRequested
	}
	return json.Marshal(toSerialize)
}

type NullableActionResponseElement2Delay struct {
	value *ActionResponseElement2Delay
	isSet bool
}

func (v NullableActionResponseElement2Delay) Get() *ActionResponseElement2Delay {
	return v.value
}

func (v *NullableActionResponseElement2Delay) Set(val *ActionResponseElement2Delay) {
	v.value = val
	v.isSet = true
}

func (v NullableActionResponseElement2Delay) IsSet() bool {
	return v.isSet
}

func (v *NullableActionResponseElement2Delay) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionResponseElement2Delay(val *ActionResponseElement2Delay) *NullableActionResponseElement2Delay {
	return &NullableActionResponseElement2Delay{value: val, isSet: true}
}

func (v NullableActionResponseElement2Delay) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionResponseElement2Delay) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


