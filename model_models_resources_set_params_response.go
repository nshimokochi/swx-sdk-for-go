/*
 * Accounts & Users Service - Public API
 *
 * IN PROGRESS->This is the guide to use the different endpoints to manage the clusters.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ModelsResourcesSetParamsResponse struct for ModelsResourcesSetParamsResponse
type ModelsResourcesSetParamsResponse struct {
	Id *string `json:"id,omitempty"`
	Params *[]string `json:"params,omitempty"`
	ResourceId *string `json:"resource_id,omitempty"`
}

// NewModelsResourcesSetParamsResponse instantiates a new ModelsResourcesSetParamsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsResourcesSetParamsResponse() *ModelsResourcesSetParamsResponse {
	this := ModelsResourcesSetParamsResponse{}
	return &this
}

// NewModelsResourcesSetParamsResponseWithDefaults instantiates a new ModelsResourcesSetParamsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsResourcesSetParamsResponseWithDefaults() *ModelsResourcesSetParamsResponse {
	this := ModelsResourcesSetParamsResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsResourcesSetParamsResponse) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsResourcesSetParamsResponse) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsResourcesSetParamsResponse) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelsResourcesSetParamsResponse) SetId(v string) {
	o.Id = &v
}

// GetParams returns the Params field value if set, zero value otherwise.
func (o *ModelsResourcesSetParamsResponse) GetParams() []string {
	if o == nil || o.Params == nil {
		var ret []string
		return ret
	}
	return *o.Params
}

// GetParamsOk returns a tuple with the Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsResourcesSetParamsResponse) GetParamsOk() (*[]string, bool) {
	if o == nil || o.Params == nil {
		return nil, false
	}
	return o.Params, true
}

// HasParams returns a boolean if a field has been set.
func (o *ModelsResourcesSetParamsResponse) HasParams() bool {
	if o != nil && o.Params != nil {
		return true
	}

	return false
}

// SetParams gets a reference to the given []string and assigns it to the Params field.
func (o *ModelsResourcesSetParamsResponse) SetParams(v []string) {
	o.Params = &v
}

// GetResourceId returns the ResourceId field value if set, zero value otherwise.
func (o *ModelsResourcesSetParamsResponse) GetResourceId() string {
	if o == nil || o.ResourceId == nil {
		var ret string
		return ret
	}
	return *o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsResourcesSetParamsResponse) GetResourceIdOk() (*string, bool) {
	if o == nil || o.ResourceId == nil {
		return nil, false
	}
	return o.ResourceId, true
}

// HasResourceId returns a boolean if a field has been set.
func (o *ModelsResourcesSetParamsResponse) HasResourceId() bool {
	if o != nil && o.ResourceId != nil {
		return true
	}

	return false
}

// SetResourceId gets a reference to the given string and assigns it to the ResourceId field.
func (o *ModelsResourcesSetParamsResponse) SetResourceId(v string) {
	o.ResourceId = &v
}

func (o ModelsResourcesSetParamsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Params != nil {
		toSerialize["params"] = o.Params
	}
	if o.ResourceId != nil {
		toSerialize["resource_id"] = o.ResourceId
	}
	return json.Marshal(toSerialize)
}

type NullableModelsResourcesSetParamsResponse struct {
	value *ModelsResourcesSetParamsResponse
	isSet bool
}

func (v NullableModelsResourcesSetParamsResponse) Get() *ModelsResourcesSetParamsResponse {
	return v.value
}

func (v *NullableModelsResourcesSetParamsResponse) Set(val *ModelsResourcesSetParamsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsResourcesSetParamsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsResourcesSetParamsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsResourcesSetParamsResponse(val *ModelsResourcesSetParamsResponse) *NullableModelsResourcesSetParamsResponse {
	return &NullableModelsResourcesSetParamsResponse{value: val, isSet: true}
}

func (v NullableModelsResourcesSetParamsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsResourcesSetParamsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


