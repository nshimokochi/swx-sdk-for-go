/*
 * Accounts & Users Service - Public API
 *
 * IN PROGRESS->This is the guide to use the different endpoints to manage the clusters.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UpdateClusterResponseEvents struct for UpdateClusterResponseEvents
type UpdateClusterResponseEvents struct {
	DeploymentsStats *EventDeploymentStats `json:"deployments-stats,omitempty"`
	KubectlLogs *EventKubectlLogs `json:"kubectl-logs,omitempty"`
	NodesStats *EventNodesStats `json:"nodes-stats,omitempty"`
}

// NewUpdateClusterResponseEvents instantiates a new UpdateClusterResponseEvents object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateClusterResponseEvents() *UpdateClusterResponseEvents {
	this := UpdateClusterResponseEvents{}
	return &this
}

// NewUpdateClusterResponseEventsWithDefaults instantiates a new UpdateClusterResponseEvents object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateClusterResponseEventsWithDefaults() *UpdateClusterResponseEvents {
	this := UpdateClusterResponseEvents{}
	return &this
}

// GetDeploymentsStats returns the DeploymentsStats field value if set, zero value otherwise.
func (o *UpdateClusterResponseEvents) GetDeploymentsStats() EventDeploymentStats {
	if o == nil || o.DeploymentsStats == nil {
		var ret EventDeploymentStats
		return ret
	}
	return *o.DeploymentsStats
}

// GetDeploymentsStatsOk returns a tuple with the DeploymentsStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateClusterResponseEvents) GetDeploymentsStatsOk() (*EventDeploymentStats, bool) {
	if o == nil || o.DeploymentsStats == nil {
		return nil, false
	}
	return o.DeploymentsStats, true
}

// HasDeploymentsStats returns a boolean if a field has been set.
func (o *UpdateClusterResponseEvents) HasDeploymentsStats() bool {
	if o != nil && o.DeploymentsStats != nil {
		return true
	}

	return false
}

// SetDeploymentsStats gets a reference to the given EventDeploymentStats and assigns it to the DeploymentsStats field.
func (o *UpdateClusterResponseEvents) SetDeploymentsStats(v EventDeploymentStats) {
	o.DeploymentsStats = &v
}

// GetKubectlLogs returns the KubectlLogs field value if set, zero value otherwise.
func (o *UpdateClusterResponseEvents) GetKubectlLogs() EventKubectlLogs {
	if o == nil || o.KubectlLogs == nil {
		var ret EventKubectlLogs
		return ret
	}
	return *o.KubectlLogs
}

// GetKubectlLogsOk returns a tuple with the KubectlLogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateClusterResponseEvents) GetKubectlLogsOk() (*EventKubectlLogs, bool) {
	if o == nil || o.KubectlLogs == nil {
		return nil, false
	}
	return o.KubectlLogs, true
}

// HasKubectlLogs returns a boolean if a field has been set.
func (o *UpdateClusterResponseEvents) HasKubectlLogs() bool {
	if o != nil && o.KubectlLogs != nil {
		return true
	}

	return false
}

// SetKubectlLogs gets a reference to the given EventKubectlLogs and assigns it to the KubectlLogs field.
func (o *UpdateClusterResponseEvents) SetKubectlLogs(v EventKubectlLogs) {
	o.KubectlLogs = &v
}

// GetNodesStats returns the NodesStats field value if set, zero value otherwise.
func (o *UpdateClusterResponseEvents) GetNodesStats() EventNodesStats {
	if o == nil || o.NodesStats == nil {
		var ret EventNodesStats
		return ret
	}
	return *o.NodesStats
}

// GetNodesStatsOk returns a tuple with the NodesStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateClusterResponseEvents) GetNodesStatsOk() (*EventNodesStats, bool) {
	if o == nil || o.NodesStats == nil {
		return nil, false
	}
	return o.NodesStats, true
}

// HasNodesStats returns a boolean if a field has been set.
func (o *UpdateClusterResponseEvents) HasNodesStats() bool {
	if o != nil && o.NodesStats != nil {
		return true
	}

	return false
}

// SetNodesStats gets a reference to the given EventNodesStats and assigns it to the NodesStats field.
func (o *UpdateClusterResponseEvents) SetNodesStats(v EventNodesStats) {
	o.NodesStats = &v
}

func (o UpdateClusterResponseEvents) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeploymentsStats != nil {
		toSerialize["deployments-stats"] = o.DeploymentsStats
	}
	if o.KubectlLogs != nil {
		toSerialize["kubectl-logs"] = o.KubectlLogs
	}
	if o.NodesStats != nil {
		toSerialize["nodes-stats"] = o.NodesStats
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateClusterResponseEvents struct {
	value *UpdateClusterResponseEvents
	isSet bool
}

func (v NullableUpdateClusterResponseEvents) Get() *UpdateClusterResponseEvents {
	return v.value
}

func (v *NullableUpdateClusterResponseEvents) Set(val *UpdateClusterResponseEvents) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateClusterResponseEvents) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateClusterResponseEvents) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateClusterResponseEvents(val *UpdateClusterResponseEvents) *NullableUpdateClusterResponseEvents {
	return &NullableUpdateClusterResponseEvents{value: val, isSet: true}
}

func (v NullableUpdateClusterResponseEvents) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateClusterResponseEvents) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


