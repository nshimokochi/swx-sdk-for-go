/*
 * Accounts & Users Service - Public API
 *
 * IN PROGRESS->This is the guide to use the different endpoints to manage the clusters.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UpdateClusterResponseActions struct for UpdateClusterResponseActions
type UpdateClusterResponseActions struct {
	RunStats *ActionRunStats `json:"run-stats,omitempty"`
	SendKubectl *ActionSendKubectl `json:"send-kubectl,omitempty"`
	StopStats *ActionStopStats `json:"stop-stats,omitempty"`
}

// NewUpdateClusterResponseActions instantiates a new UpdateClusterResponseActions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateClusterResponseActions() *UpdateClusterResponseActions {
	this := UpdateClusterResponseActions{}
	return &this
}

// NewUpdateClusterResponseActionsWithDefaults instantiates a new UpdateClusterResponseActions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateClusterResponseActionsWithDefaults() *UpdateClusterResponseActions {
	this := UpdateClusterResponseActions{}
	return &this
}

// GetRunStats returns the RunStats field value if set, zero value otherwise.
func (o *UpdateClusterResponseActions) GetRunStats() ActionRunStats {
	if o == nil || o.RunStats == nil {
		var ret ActionRunStats
		return ret
	}
	return *o.RunStats
}

// GetRunStatsOk returns a tuple with the RunStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateClusterResponseActions) GetRunStatsOk() (*ActionRunStats, bool) {
	if o == nil || o.RunStats == nil {
		return nil, false
	}
	return o.RunStats, true
}

// HasRunStats returns a boolean if a field has been set.
func (o *UpdateClusterResponseActions) HasRunStats() bool {
	if o != nil && o.RunStats != nil {
		return true
	}

	return false
}

// SetRunStats gets a reference to the given ActionRunStats and assigns it to the RunStats field.
func (o *UpdateClusterResponseActions) SetRunStats(v ActionRunStats) {
	o.RunStats = &v
}

// GetSendKubectl returns the SendKubectl field value if set, zero value otherwise.
func (o *UpdateClusterResponseActions) GetSendKubectl() ActionSendKubectl {
	if o == nil || o.SendKubectl == nil {
		var ret ActionSendKubectl
		return ret
	}
	return *o.SendKubectl
}

// GetSendKubectlOk returns a tuple with the SendKubectl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateClusterResponseActions) GetSendKubectlOk() (*ActionSendKubectl, bool) {
	if o == nil || o.SendKubectl == nil {
		return nil, false
	}
	return o.SendKubectl, true
}

// HasSendKubectl returns a boolean if a field has been set.
func (o *UpdateClusterResponseActions) HasSendKubectl() bool {
	if o != nil && o.SendKubectl != nil {
		return true
	}

	return false
}

// SetSendKubectl gets a reference to the given ActionSendKubectl and assigns it to the SendKubectl field.
func (o *UpdateClusterResponseActions) SetSendKubectl(v ActionSendKubectl) {
	o.SendKubectl = &v
}

// GetStopStats returns the StopStats field value if set, zero value otherwise.
func (o *UpdateClusterResponseActions) GetStopStats() ActionStopStats {
	if o == nil || o.StopStats == nil {
		var ret ActionStopStats
		return ret
	}
	return *o.StopStats
}

// GetStopStatsOk returns a tuple with the StopStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateClusterResponseActions) GetStopStatsOk() (*ActionStopStats, bool) {
	if o == nil || o.StopStats == nil {
		return nil, false
	}
	return o.StopStats, true
}

// HasStopStats returns a boolean if a field has been set.
func (o *UpdateClusterResponseActions) HasStopStats() bool {
	if o != nil && o.StopStats != nil {
		return true
	}

	return false
}

// SetStopStats gets a reference to the given ActionStopStats and assigns it to the StopStats field.
func (o *UpdateClusterResponseActions) SetStopStats(v ActionStopStats) {
	o.StopStats = &v
}

func (o UpdateClusterResponseActions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RunStats != nil {
		toSerialize["run-stats"] = o.RunStats
	}
	if o.SendKubectl != nil {
		toSerialize["send-kubectl"] = o.SendKubectl
	}
	if o.StopStats != nil {
		toSerialize["stop-stats"] = o.StopStats
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateClusterResponseActions struct {
	value *UpdateClusterResponseActions
	isSet bool
}

func (v NullableUpdateClusterResponseActions) Get() *UpdateClusterResponseActions {
	return v.value
}

func (v *NullableUpdateClusterResponseActions) Set(val *UpdateClusterResponseActions) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateClusterResponseActions) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateClusterResponseActions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateClusterResponseActions(val *UpdateClusterResponseActions) *NullableUpdateClusterResponseActions {
	return &NullableUpdateClusterResponseActions{value: val, isSet: true}
}

func (v NullableUpdateClusterResponseActions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateClusterResponseActions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


