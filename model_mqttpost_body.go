/*
 * Accounts & Users Service - Public API
 *
 * IN PROGRESS->This is the guide to use the different endpoints to manage the clusters.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MQTTPOSTBody struct for MQTTPOSTBody
type MQTTPOSTBody struct {
	Label *string `json:"label,omitempty"`
	Password *string `json:"password,omitempty"`
	Username *string `json:"username,omitempty"`
}

// NewMQTTPOSTBody instantiates a new MQTTPOSTBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMQTTPOSTBody() *MQTTPOSTBody {
	this := MQTTPOSTBody{}
	return &this
}

// NewMQTTPOSTBodyWithDefaults instantiates a new MQTTPOSTBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMQTTPOSTBodyWithDefaults() *MQTTPOSTBody {
	this := MQTTPOSTBody{}
	return &this
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *MQTTPOSTBody) GetLabel() string {
	if o == nil || o.Label == nil {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MQTTPOSTBody) GetLabelOk() (*string, bool) {
	if o == nil || o.Label == nil {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *MQTTPOSTBody) HasLabel() bool {
	if o != nil && o.Label != nil {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *MQTTPOSTBody) SetLabel(v string) {
	o.Label = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *MQTTPOSTBody) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MQTTPOSTBody) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *MQTTPOSTBody) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *MQTTPOSTBody) SetPassword(v string) {
	o.Password = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *MQTTPOSTBody) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MQTTPOSTBody) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *MQTTPOSTBody) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *MQTTPOSTBody) SetUsername(v string) {
	o.Username = &v
}

func (o MQTTPOSTBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Label != nil {
		toSerialize["label"] = o.Label
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	return json.Marshal(toSerialize)
}

type NullableMQTTPOSTBody struct {
	value *MQTTPOSTBody
	isSet bool
}

func (v NullableMQTTPOSTBody) Get() *MQTTPOSTBody {
	return v.value
}

func (v *NullableMQTTPOSTBody) Set(val *MQTTPOSTBody) {
	v.value = val
	v.isSet = true
}

func (v NullableMQTTPOSTBody) IsSet() bool {
	return v.isSet
}

func (v *NullableMQTTPOSTBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMQTTPOSTBody(val *MQTTPOSTBody) *NullableMQTTPOSTBody {
	return &NullableMQTTPOSTBody{value: val, isSet: true}
}

func (v NullableMQTTPOSTBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMQTTPOSTBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


