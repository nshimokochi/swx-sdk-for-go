/*
 * Accounts & Users Service - Public API
 *
 * IN PROGRESS->This is the guide to use the different endpoints to manage the clusters.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ActionDelayInputPropertiesInput struct for ActionDelayInputPropertiesInput
type ActionDelayInputPropertiesInput struct {
	Maximum *float32 `json:"maximum,omitempty"`
	Minimum *float32 `json:"minimum,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewActionDelayInputPropertiesInput instantiates a new ActionDelayInputPropertiesInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionDelayInputPropertiesInput() *ActionDelayInputPropertiesInput {
	this := ActionDelayInputPropertiesInput{}
	return &this
}

// NewActionDelayInputPropertiesInputWithDefaults instantiates a new ActionDelayInputPropertiesInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionDelayInputPropertiesInputWithDefaults() *ActionDelayInputPropertiesInput {
	this := ActionDelayInputPropertiesInput{}
	return &this
}

// GetMaximum returns the Maximum field value if set, zero value otherwise.
func (o *ActionDelayInputPropertiesInput) GetMaximum() float32 {
	if o == nil || o.Maximum == nil {
		var ret float32
		return ret
	}
	return *o.Maximum
}

// GetMaximumOk returns a tuple with the Maximum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionDelayInputPropertiesInput) GetMaximumOk() (*float32, bool) {
	if o == nil || o.Maximum == nil {
		return nil, false
	}
	return o.Maximum, true
}

// HasMaximum returns a boolean if a field has been set.
func (o *ActionDelayInputPropertiesInput) HasMaximum() bool {
	if o != nil && o.Maximum != nil {
		return true
	}

	return false
}

// SetMaximum gets a reference to the given float32 and assigns it to the Maximum field.
func (o *ActionDelayInputPropertiesInput) SetMaximum(v float32) {
	o.Maximum = &v
}

// GetMinimum returns the Minimum field value if set, zero value otherwise.
func (o *ActionDelayInputPropertiesInput) GetMinimum() float32 {
	if o == nil || o.Minimum == nil {
		var ret float32
		return ret
	}
	return *o.Minimum
}

// GetMinimumOk returns a tuple with the Minimum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionDelayInputPropertiesInput) GetMinimumOk() (*float32, bool) {
	if o == nil || o.Minimum == nil {
		return nil, false
	}
	return o.Minimum, true
}

// HasMinimum returns a boolean if a field has been set.
func (o *ActionDelayInputPropertiesInput) HasMinimum() bool {
	if o != nil && o.Minimum != nil {
		return true
	}

	return false
}

// SetMinimum gets a reference to the given float32 and assigns it to the Minimum field.
func (o *ActionDelayInputPropertiesInput) SetMinimum(v float32) {
	o.Minimum = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ActionDelayInputPropertiesInput) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionDelayInputPropertiesInput) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ActionDelayInputPropertiesInput) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ActionDelayInputPropertiesInput) SetType(v string) {
	o.Type = &v
}

func (o ActionDelayInputPropertiesInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Maximum != nil {
		toSerialize["maximum"] = o.Maximum
	}
	if o.Minimum != nil {
		toSerialize["minimum"] = o.Minimum
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableActionDelayInputPropertiesInput struct {
	value *ActionDelayInputPropertiesInput
	isSet bool
}

func (v NullableActionDelayInputPropertiesInput) Get() *ActionDelayInputPropertiesInput {
	return v.value
}

func (v *NullableActionDelayInputPropertiesInput) Set(val *ActionDelayInputPropertiesInput) {
	v.value = val
	v.isSet = true
}

func (v NullableActionDelayInputPropertiesInput) IsSet() bool {
	return v.isSet
}

func (v *NullableActionDelayInputPropertiesInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionDelayInputPropertiesInput(val *ActionDelayInputPropertiesInput) *NullableActionDelayInputPropertiesInput {
	return &NullableActionDelayInputPropertiesInput{value: val, isSet: true}
}

func (v NullableActionDelayInputPropertiesInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionDelayInputPropertiesInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


