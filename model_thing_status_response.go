/*
 * Accounts & Users Service - Public API
 *
 * IN PROGRESS->This is the guide to use the different endpoints to manage the clusters.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ThingStatusResponse struct for ThingStatusResponse
type ThingStatusResponse struct {
	Collection *string `json:"collection,omitempty"`
	Properties *map[string]interface{} `json:"properties,omitempty"`
	Space *string `json:"space,omitempty"`
	Title *string `json:"title,omitempty"`
	Uid *string `json:"uid,omitempty"`
}

// NewThingStatusResponse instantiates a new ThingStatusResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThingStatusResponse() *ThingStatusResponse {
	this := ThingStatusResponse{}
	return &this
}

// NewThingStatusResponseWithDefaults instantiates a new ThingStatusResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThingStatusResponseWithDefaults() *ThingStatusResponse {
	this := ThingStatusResponse{}
	return &this
}

// GetCollection returns the Collection field value if set, zero value otherwise.
func (o *ThingStatusResponse) GetCollection() string {
	if o == nil || o.Collection == nil {
		var ret string
		return ret
	}
	return *o.Collection
}

// GetCollectionOk returns a tuple with the Collection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThingStatusResponse) GetCollectionOk() (*string, bool) {
	if o == nil || o.Collection == nil {
		return nil, false
	}
	return o.Collection, true
}

// HasCollection returns a boolean if a field has been set.
func (o *ThingStatusResponse) HasCollection() bool {
	if o != nil && o.Collection != nil {
		return true
	}

	return false
}

// SetCollection gets a reference to the given string and assigns it to the Collection field.
func (o *ThingStatusResponse) SetCollection(v string) {
	o.Collection = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *ThingStatusResponse) GetProperties() map[string]interface{} {
	if o == nil || o.Properties == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThingStatusResponse) GetPropertiesOk() (*map[string]interface{}, bool) {
	if o == nil || o.Properties == nil {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *ThingStatusResponse) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

// SetProperties gets a reference to the given map[string]interface{} and assigns it to the Properties field.
func (o *ThingStatusResponse) SetProperties(v map[string]interface{}) {
	o.Properties = &v
}

// GetSpace returns the Space field value if set, zero value otherwise.
func (o *ThingStatusResponse) GetSpace() string {
	if o == nil || o.Space == nil {
		var ret string
		return ret
	}
	return *o.Space
}

// GetSpaceOk returns a tuple with the Space field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThingStatusResponse) GetSpaceOk() (*string, bool) {
	if o == nil || o.Space == nil {
		return nil, false
	}
	return o.Space, true
}

// HasSpace returns a boolean if a field has been set.
func (o *ThingStatusResponse) HasSpace() bool {
	if o != nil && o.Space != nil {
		return true
	}

	return false
}

// SetSpace gets a reference to the given string and assigns it to the Space field.
func (o *ThingStatusResponse) SetSpace(v string) {
	o.Space = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *ThingStatusResponse) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThingStatusResponse) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *ThingStatusResponse) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *ThingStatusResponse) SetTitle(v string) {
	o.Title = &v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *ThingStatusResponse) GetUid() string {
	if o == nil || o.Uid == nil {
		var ret string
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThingStatusResponse) GetUidOk() (*string, bool) {
	if o == nil || o.Uid == nil {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *ThingStatusResponse) HasUid() bool {
	if o != nil && o.Uid != nil {
		return true
	}

	return false
}

// SetUid gets a reference to the given string and assigns it to the Uid field.
func (o *ThingStatusResponse) SetUid(v string) {
	o.Uid = &v
}

func (o ThingStatusResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Collection != nil {
		toSerialize["collection"] = o.Collection
	}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}
	if o.Space != nil {
		toSerialize["space"] = o.Space
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.Uid != nil {
		toSerialize["uid"] = o.Uid
	}
	return json.Marshal(toSerialize)
}

type NullableThingStatusResponse struct {
	value *ThingStatusResponse
	isSet bool
}

func (v NullableThingStatusResponse) Get() *ThingStatusResponse {
	return v.value
}

func (v *NullableThingStatusResponse) Set(val *ThingStatusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableThingStatusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableThingStatusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThingStatusResponse(val *ThingStatusResponse) *NullableThingStatusResponse {
	return &NullableThingStatusResponse{value: val, isSet: true}
}

func (v NullableThingStatusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThingStatusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


