/*
 * Accounts & Users Service - Public API
 *
 * IN PROGRESS->This is the guide to use the different endpoints to manage the clusters.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DeleteClusterResponseErrorClusterBackend struct for DeleteClusterResponseErrorClusterBackend
type DeleteClusterResponseErrorClusterBackend struct {
	HttpStatusCode *int32 `json:"http_status_code,omitempty"`
}

// NewDeleteClusterResponseErrorClusterBackend instantiates a new DeleteClusterResponseErrorClusterBackend object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteClusterResponseErrorClusterBackend() *DeleteClusterResponseErrorClusterBackend {
	this := DeleteClusterResponseErrorClusterBackend{}
	return &this
}

// NewDeleteClusterResponseErrorClusterBackendWithDefaults instantiates a new DeleteClusterResponseErrorClusterBackend object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteClusterResponseErrorClusterBackendWithDefaults() *DeleteClusterResponseErrorClusterBackend {
	this := DeleteClusterResponseErrorClusterBackend{}
	return &this
}

// GetHttpStatusCode returns the HttpStatusCode field value if set, zero value otherwise.
func (o *DeleteClusterResponseErrorClusterBackend) GetHttpStatusCode() int32 {
	if o == nil || o.HttpStatusCode == nil {
		var ret int32
		return ret
	}
	return *o.HttpStatusCode
}

// GetHttpStatusCodeOk returns a tuple with the HttpStatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteClusterResponseErrorClusterBackend) GetHttpStatusCodeOk() (*int32, bool) {
	if o == nil || o.HttpStatusCode == nil {
		return nil, false
	}
	return o.HttpStatusCode, true
}

// HasHttpStatusCode returns a boolean if a field has been set.
func (o *DeleteClusterResponseErrorClusterBackend) HasHttpStatusCode() bool {
	if o != nil && o.HttpStatusCode != nil {
		return true
	}

	return false
}

// SetHttpStatusCode gets a reference to the given int32 and assigns it to the HttpStatusCode field.
func (o *DeleteClusterResponseErrorClusterBackend) SetHttpStatusCode(v int32) {
	o.HttpStatusCode = &v
}

func (o DeleteClusterResponseErrorClusterBackend) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.HttpStatusCode != nil {
		toSerialize["http_status_code"] = o.HttpStatusCode
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteClusterResponseErrorClusterBackend struct {
	value *DeleteClusterResponseErrorClusterBackend
	isSet bool
}

func (v NullableDeleteClusterResponseErrorClusterBackend) Get() *DeleteClusterResponseErrorClusterBackend {
	return v.value
}

func (v *NullableDeleteClusterResponseErrorClusterBackend) Set(val *DeleteClusterResponseErrorClusterBackend) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteClusterResponseErrorClusterBackend) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteClusterResponseErrorClusterBackend) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteClusterResponseErrorClusterBackend(val *DeleteClusterResponseErrorClusterBackend) *NullableDeleteClusterResponseErrorClusterBackend {
	return &NullableDeleteClusterResponseErrorClusterBackend{value: val, isSet: true}
}

func (v NullableDeleteClusterResponseErrorClusterBackend) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteClusterResponseErrorClusterBackend) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


