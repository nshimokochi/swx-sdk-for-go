/*
 * Accounts & Users Service - Public API
 *
 * IN PROGRESS->This is the guide to use the different endpoints to manage the clusters.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ActionSendKubectlInputProperties struct for ActionSendKubectlInputProperties
type ActionSendKubectlInputProperties struct {
	Arguments *ActionSendKubectlInputPropertiesArguments `json:"arguments,omitempty"`
	Command *ActionSendKubectlInputPropertiesCommand `json:"command,omitempty"`
	CorrelationId *ActionSendKubectlInputPropertiesCommand `json:"correlationId,omitempty"`
}

// NewActionSendKubectlInputProperties instantiates a new ActionSendKubectlInputProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionSendKubectlInputProperties() *ActionSendKubectlInputProperties {
	this := ActionSendKubectlInputProperties{}
	return &this
}

// NewActionSendKubectlInputPropertiesWithDefaults instantiates a new ActionSendKubectlInputProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionSendKubectlInputPropertiesWithDefaults() *ActionSendKubectlInputProperties {
	this := ActionSendKubectlInputProperties{}
	return &this
}

// GetArguments returns the Arguments field value if set, zero value otherwise.
func (o *ActionSendKubectlInputProperties) GetArguments() ActionSendKubectlInputPropertiesArguments {
	if o == nil || o.Arguments == nil {
		var ret ActionSendKubectlInputPropertiesArguments
		return ret
	}
	return *o.Arguments
}

// GetArgumentsOk returns a tuple with the Arguments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionSendKubectlInputProperties) GetArgumentsOk() (*ActionSendKubectlInputPropertiesArguments, bool) {
	if o == nil || o.Arguments == nil {
		return nil, false
	}
	return o.Arguments, true
}

// HasArguments returns a boolean if a field has been set.
func (o *ActionSendKubectlInputProperties) HasArguments() bool {
	if o != nil && o.Arguments != nil {
		return true
	}

	return false
}

// SetArguments gets a reference to the given ActionSendKubectlInputPropertiesArguments and assigns it to the Arguments field.
func (o *ActionSendKubectlInputProperties) SetArguments(v ActionSendKubectlInputPropertiesArguments) {
	o.Arguments = &v
}

// GetCommand returns the Command field value if set, zero value otherwise.
func (o *ActionSendKubectlInputProperties) GetCommand() ActionSendKubectlInputPropertiesCommand {
	if o == nil || o.Command == nil {
		var ret ActionSendKubectlInputPropertiesCommand
		return ret
	}
	return *o.Command
}

// GetCommandOk returns a tuple with the Command field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionSendKubectlInputProperties) GetCommandOk() (*ActionSendKubectlInputPropertiesCommand, bool) {
	if o == nil || o.Command == nil {
		return nil, false
	}
	return o.Command, true
}

// HasCommand returns a boolean if a field has been set.
func (o *ActionSendKubectlInputProperties) HasCommand() bool {
	if o != nil && o.Command != nil {
		return true
	}

	return false
}

// SetCommand gets a reference to the given ActionSendKubectlInputPropertiesCommand and assigns it to the Command field.
func (o *ActionSendKubectlInputProperties) SetCommand(v ActionSendKubectlInputPropertiesCommand) {
	o.Command = &v
}

// GetCorrelationId returns the CorrelationId field value if set, zero value otherwise.
func (o *ActionSendKubectlInputProperties) GetCorrelationId() ActionSendKubectlInputPropertiesCommand {
	if o == nil || o.CorrelationId == nil {
		var ret ActionSendKubectlInputPropertiesCommand
		return ret
	}
	return *o.CorrelationId
}

// GetCorrelationIdOk returns a tuple with the CorrelationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionSendKubectlInputProperties) GetCorrelationIdOk() (*ActionSendKubectlInputPropertiesCommand, bool) {
	if o == nil || o.CorrelationId == nil {
		return nil, false
	}
	return o.CorrelationId, true
}

// HasCorrelationId returns a boolean if a field has been set.
func (o *ActionSendKubectlInputProperties) HasCorrelationId() bool {
	if o != nil && o.CorrelationId != nil {
		return true
	}

	return false
}

// SetCorrelationId gets a reference to the given ActionSendKubectlInputPropertiesCommand and assigns it to the CorrelationId field.
func (o *ActionSendKubectlInputProperties) SetCorrelationId(v ActionSendKubectlInputPropertiesCommand) {
	o.CorrelationId = &v
}

func (o ActionSendKubectlInputProperties) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Arguments != nil {
		toSerialize["arguments"] = o.Arguments
	}
	if o.Command != nil {
		toSerialize["command"] = o.Command
	}
	if o.CorrelationId != nil {
		toSerialize["correlationId"] = o.CorrelationId
	}
	return json.Marshal(toSerialize)
}

type NullableActionSendKubectlInputProperties struct {
	value *ActionSendKubectlInputProperties
	isSet bool
}

func (v NullableActionSendKubectlInputProperties) Get() *ActionSendKubectlInputProperties {
	return v.value
}

func (v *NullableActionSendKubectlInputProperties) Set(val *ActionSendKubectlInputProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableActionSendKubectlInputProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableActionSendKubectlInputProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionSendKubectlInputProperties(val *ActionSendKubectlInputProperties) *NullableActionSendKubectlInputProperties {
	return &NullableActionSendKubectlInputProperties{value: val, isSet: true}
}

func (v NullableActionSendKubectlInputProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionSendKubectlInputProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


